<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE definition SYSTEM "hq-aries-definition.dtd">
<definition id="" name="设备相关的到期提醒">

<desc>指定某个设备在其指定的某个日期数据即将到期时,根据用户的设定,提前多少日进行提醒</desc>
<import-js  src="/static/js/aries_plugin_simpleinput.js"/>
<import-js  src="/static/js/aries_plugin_sqlData.js"/>
<import-js  src="/static/js/aries_plugin_sqlField.js"/>
<import-js  src="/static/js/aries_plugin_sendInfo.js"/>
<import-css src="/static/css/aries_plugin_simplesql.css"/>
<import-css src="/static/css/aries_plugin_sendInfo.css"/>

<showInPage/>

<role>
    <role-html>
       <![CDATA[
          当<a href="#" id="ariesBind_1">哪种类型</a>的<a href="#" id="ariesBind_2">哪台设备</a>的<a href="#" id="ariesBind_5">哪个日期数据</a>到期前<a href="#" id="ariesBind_3">多少</a>天时,
         <br><a href="#" id="ariesBind_4">执行哪些操作</a>
         
         <script>
            
            /*根据sql取得结果集*/
            var resultSql = '{"ariesBind_1":"select t.type_name as type_name, max(t.equip_type_id) as equip_type_id from db_equip_list e, db_equip_type t where t.equip_type_id = e.equip_type_id and e.status = 0 group by type_name order by equip_type_id",
                              "ariesBind_2":"select b.equip_id, b.equip_name from db_equip_list b where b.equip_type_id=#{equip_type_id}"}';
            /*根据sql取得select字段*/
            var fieldSql = '{"ariesBind_5":"select 1 as 保养周期,1 as 使用年限 from dual"}';
            
            /*做什么时的提醒方式*/
            var infoPluginShowTabs = [1,2,3];
            
            /*短信人员列表的sql语句*/
            var pluginSmsSql = 'select u.phone as id, u.username as name,u.email as email,u.phone as phone from db_users u';
            
            /*邮件人员列表的sql语句*/
            var pluginEmailSql = 'select u.email as id, u.username as name,u.email as email,u.phone as phone from db_users u';
            
            /*为短信,邮件,医院平台的提醒信息设置为相同内容.在需要时,可以为每种设置不同的提醒内容.*/
            var pluginEmailContent = platFormContent = 
                "智能推送(Aries)系统:\r\n按照频率对您进行提醒:{aries_cron_word}\r\n判断描述:{ariesBind_1}的{ariesBind_2}的{ariesBind_5}到期前{ariesBind_3}天\r\n{ariesBind_2}的到期日:{到期日}\r\n提醒信息:";
            var pluginSmsContent = "智能推送(Aries)系统:\r\n{ariesBind_2}的{ariesBind_5}还有{ariesBind_3}天即将到期,\r\n提醒信息:";

            setCondition('resultSqlMap', 
                '{"保养周期":"select use_date + SERVICE_CYCLE as dueDate from db_equip_list where EQUIP_ID=#{equip_id}",
                  "使用年限":"select install_date + NUMTOYMINTERVAL(service_life, \'year\') as dueDate from db_equip_list where EQUIP_ID=#{equip_id}"  
                    }');
         </script>
       ]]>
    </role-html>
    
    <bind id="ariesBind_1" paramKey="{'show':'type_name',submit:['equip_type_id']}" jsFunc="sqlDataPlugin"/>
    <bind id="ariesBind_2" paramKey="{'show':'equip_name',submit:['equip_id']}" jsFunc="sqlDataPlugin"/>
    <bind id="ariesBind_3" paramKey="inputNum" jsFunc="simpleinputNumber"/> 
    <bind id="ariesBind_4" paramKey="d" jsFunc="sendInfoPlugin "/>
    <bind id="ariesBind_5" paramKey="sqlField" jsFunc="sqlFieldPlugin "/>
    
    <script>
    <![CDATA[
    import org.springframework.web.context.ContextLoader;
    import org.springframework.web.context.WebApplicationContext;
    import com.hanqian.aries.plugin.simplesql.manager.SimpleSqlPluginMgr;
    import com.hanqian.aries.plugin.platform.service.SendSmsService;
    import com.hanqian.aries.plugin.platform.service.SendEmailService;
    import com.hanqian.aries.plugin.platform.service.PlatformService;
    import com.hanqian.aries.common.MsgRegExpUtil;
    import net.sf.json.JSONObject;
    import org.apache.log4j.*;
    import groovy.util.logging.*;
    import com.hanqian.util.DateUtil;
    
    Logger log = Logger.getInstance(getClass());
    log.level = Level.DEBUG;
    
    def logHead = "Aries groovy,规则id:" + ariesParam.get("aries_runtime_id") + ",";
    def resultBoolean = false;
    log.info logHead + "开始执行.";
                                                                                                                                                
    WebApplicationContext context = ContextLoader.getCurrentWebApplicationContext();
    SimpleSqlPluginMgr pluginMgr = context.getBean("pluginMgr", SimpleSqlPluginMgr.class);
    
    /* 根据选择的字段来决定使用哪条sql语句*/
    JSONObject dataJson = JSONObject.fromObject(ariesParam.get("resultSqlMap"));
    def sqlField = ariesParam.get("sqlField");
    ariesParam.put("resultSql", dataJson.get(sqlField));
    
    def resultlist = pluginMgr.findSQLData(ariesParam);

    log.debug logHead + "执行查询的结果集为:" + resultlist;
        
    def isDo = false;
    for(map in resultlist){
        
        def dueDate = map.get("dueDate") as Date;
        def inputNum = ariesParam.get("inputNum") as int;
        log.debug logHead + "到期日期：" + DateUtil.dateToStrLong(dueDate) + ", 提前提醒天数:" + inputNum;
        def diffDateNum = DateUtil.diffDate(DateUtil.getNowDate(), dueDate) as int;
        
        if (dueDate == null)
        {
            isDo = false;
            log.debug logHead + "到期日期为空,不需处理.";
        } else if (inputNum >= diffDateNum && diffDateNum >= 0) {
            isDo = true;
        } else {
            isDo = false;
            log.debug logHead + "到期日期未达到提醒时间段,不需处理.提前提醒天数:" + inputNum;
        };
        
        /*这里添加当前值是为了后面发信息时,需要替换字符串的内容时使用当前值*/
        ariesParam.put("到期日", DateUtil.dateToString(dueDate, DateUtil.BACKSLASH_SHORT_TIME_FORMAT));
        
        log.info logHead + "到期日期：" + DateUtil.dateToStrLong(dueDate) + ", 提前提醒天数:" + inputNum + ",判断后是否执行触发操作:" + isDo;
    };
    
    if(isDo) {
        
        if (ariesParam.get("smsTo")?.next()) {
            log.debug logHead + "准备执行发短信操作";
            SendSmsService sendSmsService = context.getBean("sendSmsService", SendSmsService.class);

            /*将短信文字内的大括号替换内容进行替换*/
            ariesParam.put("smsContent", MsgRegExpUtil.replaceBrace(ariesParam.get("smsContent"), ariesParam));
            sendSmsService.sendSms(ariesParam);
            log.info logHead + "完成执行发短信操作";
        } else {
            log.debug logHead + "短信号码不存在,不需要做发短信操作";
        };
            
        if (ariesParam.get("eTo")?.next()) {
            log.debug logHead + "准备执行发发邮件操作";
            SendEmailService sendEmailService = context.getBean("sendEmailService", SendEmailService.class);

            /*将邮件文字内的大括号替换内容进行替换*/
            ariesParam.put("eContent", MsgRegExpUtil.replaceBrace(ariesParam.get("eContent"), ariesParam));
            sendEmailService.sendEmail(ariesParam);
            log.info logHead + "完成执行发发邮件操作";
        } else {
            log.debug logHead + "邮箱地址不存在,不需要做发邮件操作";
        };
            
        if (ariesParam.get("hospcontent")?.next()) {
            log.debug logHead + "准备执行医院平台报警装置操作";
            PlatformService platformService = context.getBean("platformService", PlatformService.class);

            /*将医院平台文字内的大括号替换内容进行替换*/
            ariesParam.put("hospcontent", MsgRegExpUtil.replaceBrace(ariesParam.get("hospcontent"), ariesParam));
            platformService.addPlatForm(ariesParam);
            log.info logHead + "完成执行医院平台报警装置操作";
        } else {
            log.debug logHead + "医院平台报警装置标志不存在,不需要做医院平台报警操作";
        };              
        resultBoolean = true;
    };  
    
    log.info logHead + "结束执行规则, 返回结果:" + resultBoolean;
    resultBoolean;
    ]]>
    </script>
</role>
</definition>