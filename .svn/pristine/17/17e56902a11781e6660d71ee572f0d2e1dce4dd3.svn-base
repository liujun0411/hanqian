<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE definition SYSTEM "hq-aries-definition.dtd">
<definition id="update-check-for-ibess" name="医院平台基本数据更新判断任意提醒">

<desc>这个规则是为医院平台而设定的,针对界面上的数据是否及时更新进行任意提醒.</desc>
<import-js	src="/static/js/aries_plugin_sendInfo.js"/>
<import-css	src="/static/css/aries_plugin_sendInfo.css"/>

<showInPage src="false"/>
<role>
	<role-html>
	   <![CDATA[
		  
	   ]]>
	</role-html>

	<script>
	<![CDATA[
	import org.springframework.web.context.ContextLoader;
    import org.springframework.web.context.WebApplicationContext;
    import com.hanqian.aries.plugin.platform.service.SendSmsService;
    import com.hanqian.aries.plugin.platform.service.SendEmailService;
    import com.hanqian.aries.plugin.platform.service.PlatformService;
    import com.hanqian.aries.common.MsgRegExpUtil;
    import org.apache.log4j.*;
    import groovy.util.logging.*;
    import com.hanqian.util.DateUtil;
    
    Logger log = Logger.getInstance(getClass());
    log.level = Level.DEBUG;
    
    def logHead = "Aries groovy,规则id:" + ariesParam.get("aries_runtime_id") + ",";
    def resultBoolean = false;
    log.info logHead + "开始执行.";
    
    def rate = ariesParam.get("aries_rate");
    def sqlField = ariesParam.get("sqlField");
    def updateDateField = ariesParam.get("updateDateField");
    def updateDateFormat = ariesParam.get("updateDateFormat");
    ariesParam.put("resultSql", ariesParam.remove("updateFieldSql"));
                                                                                                                                                    
    WebApplicationContext context = ContextLoader.getCurrentWebApplicationContext();
    SimpleSqlPluginMgr pluginMgr = context.getBean("pluginMgr", SimpleSqlPluginMgr.class);
    def resultlist = pluginMgr.findSQLData(ariesParam);

    log.debug logHead + "执行查询的结果集为：" + resultlist;
    
    def isDo = false;
    for(map in resultlist){
        def checkDate = map.get(updateDateField);
        if (DateUtil.parseDate(checkDate, updateDateFormat).compareTo(DateUtil.getNowDate(updateDateFormat)) >= 0) {
            isDo = true;
            
            /*将短信文字内的大括号替换内容进行替换*/
            ariesParam.put("更新时间", checkDate);
            ariesParam.put("当前值", map.get(sqlField));
            break;
        };
    };
    log.debug logHead + "是否含有符合更新检查的结果：" + isDo;
    
    if(isDo) {
	    if (ariesParam.get("smsTo")?.next()) {
	        log.debug logHead + "准备执行发短信操作";
	        SendSmsService sendSmsService = context.getBean("sendSmsService", SendSmsService.class);
	
	        /*将短信文字内的大括号替换内容进行替换*/
	        ariesParam.put("smsContent", MsgRegExpUtil.replaceBrace(ariesParam.get("smsContent"), ariesParam));
	        sendSmsService.sendSms(ariesParam);
	        log.info logHead + "完成执行发短信操作";
	        resultBoolean = true;
	    } else {
	        log.debug logHead + "短信号码不存在,不需要做发短信操作";
	    };
	        
	    if (ariesParam.get("eTo")?.next()) {
	        log.debug logHead + "准备执行发发邮件操作";
	        SendEmailService sendEmailService = context.getBean("sendEmailService", SendEmailService.class);
	
	        /*将邮件文字内的大括号替换内容进行替换*/
	        ariesParam.put("eContent", MsgRegExpUtil.replaceBrace(ariesParam.get("eContent"), ariesParam));
	        sendEmailService.sendEmail(ariesParam);
	        log.info logHead + "完成执行发发邮件操作";
	        resultBoolean = true;
	    } else {
	        log.debug logHead + "邮箱地址不存在,不需要做发邮件操作";
	    };
	        
	    if (ariesParam.get("hospcontent")?.next()) {
	        log.debug logHead + "准备执行医院平台报警装置操作";
	        PlatformService platformService = context.getBean("platformService", PlatformService.class);
	
	        /*将医院平台文字内的大括号替换内容进行替换*/
	        ariesParam.put("hospcontent", MsgRegExpUtil.replaceBrace(ariesParam.get("hospcontent"), ariesParam));
	        platformService.addPlatForm(ariesParam);
	        log.info logHead + "完成执行医院平台报警装置操作";
	        resultBoolean = true;
	    } else {
	        log.debug logHead + "医院平台报警装置标志不存在,不需要做医院平台报警操作";
	    };
    };
    
    log.info logHead + "结束执行规则, 返回结果:" + resultBoolean;
    resultBoolean;
	]]>
    </script>
</role>
</definition>